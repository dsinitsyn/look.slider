!function(t){var e={col:1,pagination:!1,dotted:!0,touch:!1,arrows:!0,duration:1e3,carousel:!0,autoslide:!1,animation:"ribbon"},i={init:function(i,s){var n=this;n.$slider=t(i),n.settings=t.extend({},e,n.$slider.data(),s),n.$wrapper=n.createWrapper(),n.$slides=n.assignSlides(),n.setup(),n.makeOrder()},setup:function(){var t=this;1==t.settings.arrows&&t.$slides.length>1&&t.initArrows(),1==t.settings.dotted&&t.$slides.length>1&&t.initDots(),"number"==typeof t.settings.autoslide&&t.initAutoslide()},makeOrder:function(){var e=this;e.$slides.each(function(i,s){var n=t(s);i==e.$slides.length-1?n.data("next",e.$slides[0]):n.data("next",e.$slides[i+1]),0==i?n.data("prev",e.$slides[e.$slides.length-1]):n.data("prev",e.$slides[i-1])}),e.setActiveSlide(e.$slides.first())},initArrows:function(){var e=this;e.$nextBtn=t("<button/>",{addClass:"slider_next-btn",type:"button",html:">"}).click(function(){e.goToSlide("next")}),e.$prevBtn=t("<button/>",{addClass:"slider_prev-btn",type:"button",html:"<"}).click(function(){e.goToSlide("prev")}),0==e.settings.carousel&&e.$prevBtn.prop("disabled",!0),e.$slider.append(e.$nextBtn,e.$prevBtn)},initAutoslide:function(){var t=this,e=setInterval(function(){t.goToSlide("next")},t.settings.autoslide);t.$prevBtn.add(t.$nextBtn).add(t.$dots).one("click",function(){clearInterval(e)})},initDots:function(){var e=this;e.$dotsList=t("<div/>",{addClass:"slider_dotts"}).appendTo(e.$slider),e.$slides.each(function(i,s){t("<button/>",{addClass:"slider_dot-btn",type:"button"}).data("slide",t(s)).appendTo(e.$dotsList)}),e.$dots=e.$slider.find(".slider_dot-btn"),e.$slider.on("activeSlideChanged",function(i,s){e.$dots.removeClass("-active").filter(function(){return s.is(t(this).data("slide"))}).addClass("-active")}),e.$dots.click(function(i){e.bindDotClick(t(this))})},bindDotClick:function(t){var e=this,i=t.data("slide");i.index()>e.$activeSlide.index()?e.goToSlide("next",i):i.index()<e.$activeSlide.index()&&e.goToSlide("prev",i)},goToSlide:function(e,i){var s=this;if(!s.isAnimate){if(s.isAnimate=!0,s.$nextSlide=t(i||s.$activeSlide.data(e)),"next"==e)var n="-100%",d="100%";else if("prev"==e)var n="100%",d="-100%";switch(s.settings.animation){case"ribbon":}s.$activeSlide.css({zIndex:1}).animate({left:n},s.settings.duration),s.$nextSlide.css({left:d,zIndex:2}).animate({left:0},s.settings.duration,function(){s.$activeSlide.finish(),s.setActiveSlide(s.$nextSlide),s.isAnimate=!1}),0==s.settings.carousel&&s.disableButtons()}},disableButtons:function(){var t=this;t.$nextSlide.is(t.$slides.last())?t.$nextBtn.prop("disabled",!0):t.$nextBtn.prop("disabled",!1),t.$nextSlide.is(t.$slides.first())?t.$prevBtn.prop("disabled",!0):t.$prevBtn.prop("disabled",!1)},setActiveSlide:function(e){var i=this,s=t(e);i.$slides.removeClass("-active").removeAttr("style"),i.$activeSlide=s.addClass("-active"),i.$slider.trigger("activeSlideChanged",[i.$activeSlide])},assignSlides:function(){var t=this;if(1!=t.settings.col)for(var e=t.$wrapper.children("*"),i=0;i<e.length;i+=t.settings.col)e.slice(i,i+t.settings.col).wrapAll("<div class='slide'></div>");return t.$wrapper.children(".slide")},setSliderHeight:function(){var t=this;t.$slider.height(t.$slides.outerHeight(!0))},createWrapper:function(t){var e=this;return e.$slider.wrapInner('<div class="slider-wrapper"></div>'),e.$slider.find(".slider-wrapper")},reinit:function(e){t(this)}};t.fn.lookSlider=function(e){return i[e]?i[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error("Method "+e+" does not exist"):this.each(function(){var s=Object.create(i);s.init(this,e),t.data(this,"lookSlider",s)})}}(jQuery),function(t){t(".slider").lookSlider()}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5qcyIsIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRlZmF1bHRzIiwiY29sIiwicGFnaW5hdGlvbiIsImRvdHRlZCIsInRvdWNoIiwiYXJyb3dzIiwiZHVyYXRpb24iLCJjYXJvdXNlbCIsImF1dG9zbGlkZSIsImFuaW1hdGlvbiIsIm1ldGhvZHMiLCJpbml0Iiwic2xpZGVyIiwib3B0aW9ucyIsInNlbGYiLCJ0aGlzIiwiJHNsaWRlciIsInNldHRpbmdzIiwiZXh0ZW5kIiwiZGF0YSIsIiR3cmFwcGVyIiwiY3JlYXRlV3JhcHBlciIsIiRzbGlkZXMiLCJhc3NpZ25TbGlkZXMiLCJzZXR1cCIsIm1ha2VPcmRlciIsImxlbmd0aCIsImluaXRBcnJvd3MiLCJpbml0RG90cyIsImluaXRBdXRvc2xpZGUiLCJlYWNoIiwiaW5kZXgiLCJzbGlkZSIsIiRzbGlkZSIsInNldEFjdGl2ZVNsaWRlIiwiZmlyc3QiLCIkbmV4dEJ0biIsImFkZENsYXNzIiwidHlwZSIsImh0bWwiLCJjbGljayIsImdvVG9TbGlkZSIsIiRwcmV2QnRuIiwicHJvcCIsImFwcGVuZCIsImF1dG9zbGlkZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJhZGQiLCIkZG90cyIsIm9uZSIsImNsZWFySW50ZXJ2YWwiLCIkZG90c0xpc3QiLCJhcHBlbmRUbyIsImZpbmQiLCJvbiIsImV2ZW50IiwicmVtb3ZlQ2xhc3MiLCJmaWx0ZXIiLCJpcyIsImJpbmREb3RDbGljayIsIiRkb3QiLCIkYWN0aXZlU2xpZGUiLCJkaXJlY3Rpb24iLCJuZXh0U2xpZGUiLCJpc0FuaW1hdGUiLCIkbmV4dFNsaWRlIiwiY3NzQWN0aXZlTGVmdCIsImNzc05leHRMZWZ0IiwiY3NzIiwiekluZGV4IiwiYW5pbWF0ZSIsImxlZnQiLCJmaW5pc2giLCJkaXNhYmxlQnV0dG9ucyIsImxhc3QiLCJyZW1vdmVBdHRyIiwidHJpZ2dlciIsIiRlbGVtZW50cyIsImNoaWxkcmVuIiwiaSIsInNsaWNlIiwid3JhcEFsbCIsInNldFNsaWRlckhlaWdodCIsImhlaWdodCIsIm91dGVySGVpZ2h0IiwiY2xhc3NOYW1lIiwid3JhcElubmVyIiwicmVpbml0IiwicGFyYW1zIiwiZm4iLCJsb29rU2xpZGVyIiwibWV0aG9kIiwiYXBwbHkiLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJhcmd1bWVudHMiLCJlcnJvciIsIk9iamVjdCIsImNyZWF0ZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsR0FDQSxHQUFBQyxJQUNBQyxJQUFBLEVBQ0FDLFlBQUEsRUFDQUMsUUFBQSxFQUNBQyxPQUFBLEVBQ0FDLFFBQUEsRUFDQUMsU0FBQSxJQUNBQyxVQUFBLEVBQ0FDLFdBQUEsRUFDQUMsVUFBQSxVQUlBQyxHQUNBQyxLQUFBLFNBQUFDLEVBQUFDLEdBQ0EsR0FBQUMsR0FBQUMsSUFDQUQsR0FBQUUsUUFBQWpCLEVBQUFhLEdBQ0FFLEVBQUFHLFNBQUFsQixFQUFBbUIsVUFBQWxCLEVBQUFjLEVBQUFFLFFBQUFHLE9BQUFOLEdBRUFDLEVBQUFNLFNBQUFOLEVBQUFPLGdCQUNBUCxFQUFBUSxRQUFBUixFQUFBUyxlQUdBVCxFQUFBVSxRQUNBVixFQUFBVyxhQUdBRCxNQUFBLFdBQ0EsR0FBQVYsR0FBQUMsSUFJQSxJQUFBRCxFQUFBRyxTQUFBWixRQUFBUyxFQUFBUSxRQUFBSSxPQUFBLEdBQ0FaLEVBQUFhLGFBSUEsR0FBQWIsRUFBQUcsU0FBQWQsUUFBQVcsRUFBQVEsUUFBQUksT0FBQSxHQUNBWixFQUFBYyxXQUlBLGdCQUFBZCxHQUFBRyxTQUFBVCxXQUNBTSxFQUFBZSxpQkFJQUosVUFBQSxXQUNBLEdBQUFYLEdBQUFDLElBRUFELEdBQUFRLFFBQUFRLEtBQUEsU0FBQUMsRUFBQUMsR0FDQSxHQUFBQyxHQUFBbEMsRUFBQWlDLEVBRUFELElBQUFqQixFQUFBUSxRQUFBSSxPQUFBLEVBQ0FPLEVBQUFkLEtBQUEsT0FBQUwsRUFBQVEsUUFBQSxJQUNBVyxFQUFBZCxLQUFBLE9BQUFMLEVBQUFRLFFBQUFTLEVBQUEs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QUFBTCxJQUFBQSxNQVFBNUYsR0FBQWtHLE1BQUEsVUFBQU4sRUFBQSxtQkFQQTVFLEtBQUFlLEtBQUEsV0FDQSxHQUFBbEIsR0FBQXNGLE9BQUFDLE9BQUF6RixFQUNBRSxHQUFBRCxLQUFBSSxLQUFBNEUsR0FDQTVGLEVBQUFvQixLQUFBSixLQUFBLGFBQUFILE9BUUF3RixRQ3pTQSxTQUFBckcsR0FFQUEsRUFBQSxXQUFBMkYsY0FFQVUiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiggJCApIHtcbiAgICB2YXIgZGVmYXVsdHMgPXtcbiAgICAgICAgY29sOiAxLFxuICAgICAgICBwYWdpbmF0aW9uOiBmYWxzZSxcbiAgICAgICAgZG90dGVkOiB0cnVlLFxuICAgICAgICB0b3VjaDogZmFsc2UsXG4gICAgICAgIGFycm93czogdHJ1ZSxcbiAgICAgICAgZHVyYXRpb246IDEwMDAsXG4gICAgICAgIGNhcm91c2VsOiB0cnVlLFxuICAgICAgICBhdXRvc2xpZGU6IGZhbHNlLFxuICAgICAgICBhbmltYXRpb246ICdyaWJib24nIC8vcmliYm9uLCBmYWRlXG4gICAgfVxuXG5cbiAgICB2YXIgbWV0aG9kcyA9IHtcbiAgICAgICAgaW5pdDogZnVuY3Rpb24oc2xpZGVyLCBvcHRpb25zKXtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIHNlbGYuJHNsaWRlciA9ICQoc2xpZGVyKTtcbiAgICAgICAgICAgIHNlbGYuc2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIHNlbGYuJHNsaWRlci5kYXRhKCksIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICBzZWxmLiR3cmFwcGVyID0gc2VsZi5jcmVhdGVXcmFwcGVyKCk7XG4gICAgICAgICAgICBzZWxmLiRzbGlkZXMgPSBzZWxmLmFzc2lnblNsaWRlcygpO1xuXG4gICAgICAgICAgICAvLyBzZWxmLnNldFNsaWRlckhlaWdodCgpO1xuICAgICAgICAgICAgc2VsZi5zZXR1cCgpO1xuICAgICAgICAgICAgc2VsZi5tYWtlT3JkZXIoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXR1cDogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuXG4gICAgICAgICAgICAvL2luaXQgYXJvd3NcbiAgICAgICAgICAgIGlmIChzZWxmLnNldHRpbmdzLmFycm93cyA9PSB0cnVlICYmIHNlbGYuJHNsaWRlcy5sZW5ndGggPiAxKXtcbiAgICAgICAgICAgICAgICBzZWxmLmluaXRBcnJvd3MoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy9pbml0IGRvdHNcbiAgICAgICAgICAgIGlmIChzZWxmLnNldHRpbmdzLmRvdHRlZCA9PSB0cnVlICYmIHNlbGYuJHNsaWRlcy5sZW5ndGggPiAxKXtcbiAgICAgICAgICAgICAgICBzZWxmLmluaXREb3RzKCk7XG4gICAgICAgICAgICB9ICAgIFxuXG4gICAgICAgICAgICAvL2luaXQgYXV0b3NsaWRlXG4gICAgICAgICAgICBpZiAodHlwZW9mIHNlbGYuc2V0dGluZ3MuYXV0b3NsaWRlID09ICdudW1iZXInKXtcbiAgICAgICAgICAgICAgICBzZWxmLmluaXRBdXRvc2xpZGUoKTtcbiAgICAgICAgICAgIH0gICAgICBcbiAgICAgICAgfSxcblxuICAgICAgICBtYWtlT3JkZXI6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHNlbGYuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uKGluZGV4LCBzbGlkZSkge1xuICAgICAgICAgICAgICAgIHZhciAkc2xpZGUgPSAkKHNsaWRlKTtcblxuICAgICAgICAgICAgICAgIChpbmRleCA9PSBzZWxmLiRzbGlkZXMubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgICAgICAgICAgPyAkc2xpZGUuZGF0YSgnbmV4dCcsIHNlbGYuJHNsaWRlc1swXSlcbiAgICAgICAgICAgICAgICAgICAgOiAkc2xpZGUuZGF0YSgnbmV4dCcsIHNlbGYuJHNsaWRlc1tpbmRleCArIDFdKTtcblxuICAgICAgICAgICAgICAgIChpbmRleCA9PSAwKVxuICAgICAgICAgICAgICAgICAgICA/ICRzbGlkZS5kYXRhKCdwcmV2Jywgc2VsZi4kc2xpZGVzWyBzZWxmLiRzbGlkZXMubGVuZ3RoIC0gMSBdKVxuICAgICAgICAgICAgICAgICAgICA6ICRzbGlkZS5kYXRhKCdwcmV2Jywgc2VsZi4kc2xpZGVzW2luZGV4IC0gMV0pO1xuXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2VsZi5zZXRBY3RpdmVTbGlkZSggc2VsZi4kc2xpZGVzLmZpcnN0KCkgKTtcblxuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRBcnJvd3M6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgIFxuICAgICAgICAgICAgc2VsZi4kbmV4dEJ0biA9ICQoJzxidXR0b24vPicse1xuICAgICAgICAgICAgICAgIGFkZENsYXNzOiAnc2xpZGVyX25leHQtYnRuJyxcbiAgICAgICAgICAgICAgICB0eXBlOiAnYnV0dG9uJyxcbiAgICAgICAgICAgICAgICBodG1sOiAnPicsXG4gICAgICAgICAgICB9KS5jbGljayhmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHNlbGYuZ29Ub1NsaWRlKCduZXh0Jyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2VsZi4kcHJldkJ0biA9ICQoJzxidXR0b24vPicse1xuICAgICAgICAgICAgICAgIGFkZENsYXNzOiAnc2xpZGVyX3ByZXYtYnRuJyxcbiAgICAgICAgICAgICAgICB0eXBlOiAnYnV0dG9uJyxcbiAgICAgICAgICAgICAgICBodG1sOiAnPCcsXG4gICAgICAgICAgICB9KS5jbGljayhmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHNlbGYuZ29Ub1NsaWRlKCdwcmV2Jyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHNlbGYuc2V0dGluZ3MuY2Fyb3VzZWwgPT0gZmFsc2Upe1xuICAgICAgICAgICAgICAgIHNlbGYuJHByZXZCdG4ucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi4kc2xpZGVyLmFwcGVuZCggc2VsZi4kbmV4dEJ0biwgc2VsZi4kcHJldkJ0biApO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRBdXRvc2xpZGU6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHZhciBhdXRvc2xpZGVJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7ICBcbiAgICAgICAgICAgICAgICBzZWxmLmdvVG9TbGlkZSgnbmV4dCcpO1xuICAgICAgICAgICAgfSwgc2VsZi5zZXR0aW5ncy5hdXRvc2xpZGUpO1xuXG4gICAgICAgICAgICBzZWxmLiRwcmV2QnRuLmFkZChzZWxmLiRuZXh0QnRuKS5hZGQoc2VsZi4kZG90cykub25lKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChhdXRvc2xpZGVJbnRlcnZhbCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0RG90czogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICAgICAgc2VsZi4kZG90c0xpc3QgPSAkKCc8ZGl2Lz4nLHtcbiAgICAgICAgICAgICAgICBhZGRDbGFzczogJ3NsaWRlcl9kb3R0cydcbiAgICAgICAgICAgIH0pLmFwcGVuZFRvKCBzZWxmLiRzbGlkZXIgKTtcblxuICAgICAgICAgICAgLy9jcmVhdGUgZG90c1xuICAgICAgICAgICAgc2VsZi4kc2xpZGVzLmVhY2goZnVuY3Rpb24oaW5kZXgsIHNsaWRlKSB7XG5cbiAgICAgICAgICAgICAgICAkKCc8YnV0dG9uLz4nLCB7XG4gICAgICAgICAgICAgICAgICAgIGFkZENsYXNzOiAnc2xpZGVyX2RvdC1idG4nLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYnV0dG9uJ1xuICAgICAgICAgICAgICAgIH0pLmRhdGEoJ3NsaWRlJywgJChzbGlkZSkpXG4gICAgICAgICAgICAgICAgICAgIC5hcHBlbmRUbyhzZWxmLiRkb3RzTGlzdCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2VsZi4kZG90cyA9IHNlbGYuJHNsaWRlci5maW5kKCcuc2xpZGVyX2RvdC1idG4nKTtcblxuICAgICAgICAgICAgLy90b2dnbGUgYWN0aXZlIGRvdFxuICAgICAgICAgICAgc2VsZi4kc2xpZGVyLm9uKCdhY3RpdmVTbGlkZUNoYW5nZWQnLCBmdW5jdGlvbihldmVudCwgJHNsaWRlKXtcblxuICAgICAgICAgICAgICAgIHNlbGYuJGRvdHMucmVtb3ZlQ2xhc3MoJy1hY3RpdmUnKVxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHNsaWRlLmlzKCAkKHRoaXMpLmRhdGEoJ3NsaWRlJykgKTtcbiAgICAgICAgICAgICAgICAgICAgfSkuYWRkQ2xhc3MoJy1hY3RpdmUnKTtcblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vZG90IGJpbmRpbmdcbiAgICAgICAgICAgIHNlbGYuJGRvdHMuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmJpbmREb3RDbGljayggJCh0aGlzKSApXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBiaW5kRG90Q2xpY2s6IGZ1bmN0aW9uKCAkZG90ICl7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICAgICAgJHNsaWRlID0gJGRvdC5kYXRhKCdzbGlkZScpO1xuXG5cbiAgICAgICAgICAgIGlmICggJHNsaWRlLmluZGV4KCkgPiBzZWxmLiRhY3RpdmVTbGlkZS5pbmRleCgpICl7XG4gICAgICAgICAgICAgICAgc2VsZi5nb1RvU2xpZGUoJ25leHQnLCAkc2xpZGUpO1xuXG4gICAgICAgICAgICB9ZWxzZSBpZiAoICRzbGlkZS5pbmRleCgpIDwgc2VsZi4kYWN0aXZlU2xpZGUuaW5kZXgoKSApe1xuICAgICAgICAgICAgICAgIHNlbGYuZ29Ub1NsaWRlKCdwcmV2JywgJHNsaWRlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9LFxuXG4gICAgICAgIGdvVG9TbGlkZTogZnVuY3Rpb24oZGlyZWN0aW9uLCBuZXh0U2xpZGUpe1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgICAgICBpZiAoIXNlbGYuaXNBbmltYXRlKXtcblxuICAgICAgICAgICAgICAgIHNlbGYuaXNBbmltYXRlID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgIHNlbGYuJG5leHRTbGlkZSA9ICQoIG5leHRTbGlkZSB8fCBzZWxmLiRhY3RpdmVTbGlkZS5kYXRhKGRpcmVjdGlvbikgKTtcblxuICAgICAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT0gJ25leHQnKXtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgY3NzQWN0aXZlTGVmdCA9IFwiLTEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc05leHRMZWZ0ID0gXCIxMDAlXCI7XG5cbiAgICAgICAgICAgICAgICB9ZWxzZSBpZiAoZGlyZWN0aW9uID09ICdwcmV2Jyl7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGNzc0FjdGl2ZUxlZnQgPSBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc05leHRMZWZ0ID0gXCItMTAwJVwiO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHN3aXRjaCggc2VsZi5zZXR0aW5ncy5hbmltYXRpb24gKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAncmliYm9uJzogXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIHNlbGYuJGFjdGl2ZVNsaWRlLmNzcyh7ekluZGV4OiAxfSlcbiAgICAgICAgICAgICAgICAgICAgLmFuaW1hdGUoe2xlZnQ6IGNzc0FjdGl2ZUxlZnR9LCBzZWxmLnNldHRpbmdzLmR1cmF0aW9uKTtcblxuICAgICAgICAgICAgICAgIHNlbGYuJG5leHRTbGlkZS5jc3Moe2xlZnQ6IGNzc05leHRMZWZ0LCB6SW5kZXg6IDJ9KVxuICAgICAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7bGVmdDogMH0sIHNlbGYuc2V0dGluZ3MuZHVyYXRpb24sIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLiRhY3RpdmVTbGlkZS5maW5pc2goKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2V0QWN0aXZlU2xpZGUoIHNlbGYuJG5leHRTbGlkZSApO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pc0FuaW1hdGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5zZXR0aW5ncy5jYXJvdXNlbCA9PSBmYWxzZSl7XG5cbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kaXNhYmxlQnV0dG9ucygpO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGRpc2FibGVCdXR0b25zOiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgICAgICAoc2VsZi4kbmV4dFNsaWRlLmlzKCBzZWxmLiRzbGlkZXMubGFzdCgpICkgKVxuICAgICAgICAgICAgICAgID8gc2VsZi4kbmV4dEJ0bi5wcm9wKCdkaXNhYmxlZCcsIHRydWUpXG4gICAgICAgICAgICAgICAgOiBzZWxmLiRuZXh0QnRuLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIChzZWxmLiRuZXh0U2xpZGUuaXMoIHNlbGYuJHNsaWRlcy5maXJzdCgpICkgKVxuICAgICAgICAgICAgICAgID8gc2VsZi4kcHJldkJ0bi5wcm9wKCdkaXNhYmxlZCcsIHRydWUpXG4gICAgICAgICAgICAgICAgOiBzZWxmLiRwcmV2QnRuLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldEFjdGl2ZVNsaWRlOiBmdW5jdGlvbiggc2xpZGUgKXtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgICAgICAgICAkc2xpZGUgPSAkKHNsaWRlKTtcblxuICAgICAgICAgICAgc2VsZi4kc2xpZGVzLnJlbW92ZUNsYXNzKCctYWN0aXZlJykucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgIHNlbGYuJGFjdGl2ZVNsaWRlID0gJHNsaWRlLmFkZENsYXNzKCctYWN0aXZlJyk7XG4gICAgICAgICAgICBzZWxmLiRzbGlkZXIudHJpZ2dlcignYWN0aXZlU2xpZGVDaGFuZ2VkJywgW3NlbGYuJGFjdGl2ZVNsaWRlXSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYXNzaWduU2xpZGVzOiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgICAgICBpZiAoc2VsZi5zZXR0aW5ncy5jb2wgIT0gMSl7XG5cbiAgICAgICAgICAgICAgICB2YXIgJGVsZW1lbnRzID0gc2VsZi4kd3JhcHBlci5jaGlsZHJlbignKicpO1xuXG4gICAgICAgICAgICAgICAgZm9yKCB2YXIgaSA9IDA7IGkgPCAkZWxlbWVudHMubGVuZ3RoOyBpICs9IHNlbGYuc2V0dGluZ3MuY29sICkge1xuICAgICAgICAgICAgICAgICAgICAkZWxlbWVudHMuc2xpY2UoaSwgaSArIHNlbGYuc2V0dGluZ3MuY29sICkud3JhcEFsbChcIjxkaXYgY2xhc3M9J3NsaWRlJz48L2Rpdj5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gc2VsZi4kd3JhcHBlci5jaGlsZHJlbignLnNsaWRlJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0U2xpZGVySGVpZ2h0OiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgc2VsZi4kc2xpZGVyLmhlaWdodCggc2VsZi4kc2xpZGVzLm91dGVySGVpZ2h0KHRydWUpICk7XG5cbiAgICAgICAgfSxcblxuICAgICAgICBjcmVhdGVXcmFwcGVyOiBmdW5jdGlvbihjbGFzc05hbWUpe1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgc2VsZi4kc2xpZGVyLndyYXBJbm5lcignPGRpdiBjbGFzcz1cInNsaWRlci13cmFwcGVyXCI+PC9kaXY+Jyk7XG5cbiAgICAgICAgICAgIHJldHVybiBzZWxmLiRzbGlkZXIuZmluZCgnLnNsaWRlci13cmFwcGVyJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVpbml0OiBmdW5jdGlvbihwYXJhbXMpe1xuICAgICAgICAgICAgdmFyIHNsaWRlciA9ICQodGhpcyk7XG5cbiAgICAgICAgICAgIC8vIGlmIChzbGlkZXIubGVuZ3RoKXtcbiAgICAgICAgICAgIC8vICAgICAvL3JlbW92ZSBzbGlkZSB3cmFwcGVyXG4gICAgICAgICAgICAvLyAgICAgaWYgKHNsaWRlci5kYXRhKCdjZWxscycpKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgc2xpZGVyLmZpbmQoJy5zbGlkZSA+IConKS51bndyYXAoKTtcbiAgICAgICAgICAgIC8vICAgICB9XG5cbiAgICAgICAgICAgIC8vICAgICAvL3JlbW92ZSBjb250cm9sc1xuICAgICAgICAgICAgLy8gICAgIHNsaWRlci5maW5kKCcuc2xpZGVyLWNvbnRyb2wnKS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgLy8gICAgIC8vcmVtb3ZlIHJpYmJvbiBhbmQgY29udGVudFxuICAgICAgICAgICAgLy8gICAgIHNsaWRlci5maW5kKCcuc2xpZGVyLWNvbnRlbnQnKS5yZXBsYWNlV2l0aChzbGlkZXIuZmluZCgnLnNsaWRlci1yaWJib24nKS5jb250ZW50cygpKTtcblxuICAgICAgICAgICAgLy8gICAgIGlmIChwYXJhbXMpe1xuICAgICAgICAgICAgLy8gICAgICAgICBwYXJhbXMgPSAkLnBhcnNlSlNPTihwYXJhbXMpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vICAgICAgICAgLy9zZXQgbmV3IHBhcmFtc1xuICAgICAgICAgICAgLy8gICAgICAgICAkLmVhY2gocGFyYW1zLCBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgc2xpZGVyLmRhdGEoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAvLyAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gICAgIH1cblxuICAgICAgICAgICAgLy8gICAgIC8vaW5pdFxuICAgICAgICAgICAgLy8gICAgIHNsaWRlci5sb29rU2xpZGVyKCk7XG4gICAgICAgICAgICAvLyB9ZWxzZXtcbiAgICAgICAgICAgIC8vICAgICByZXR1cm47XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4kLmZuLmxvb2tTbGlkZXIgPSBmdW5jdGlvbiggbWV0aG9kICkge1xuXG4gICAgaWYgKCBtZXRob2RzW21ldGhvZF0gKSB7XG4gICAgICAgIHJldHVybiBtZXRob2RzW21ldGhvZF0uYXBwbHkoIHRoaXMsIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcmd1bWVudHMsIDEgKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCB0eXBlb2YgbWV0aG9kID09PSAnb2JqZWN0JyB8fCAhIG1ldGhvZCApIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBzbGlkZXIgPSBPYmplY3QuY3JlYXRlKCBtZXRob2RzICk7XG4gICAgICAgICAgICBzbGlkZXIuaW5pdCggdGhpcywgbWV0aG9kICk7XG4gICAgICAgICAgICAkLmRhdGEoIHRoaXMsICdsb29rU2xpZGVyJywgc2xpZGVyICk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgICAkLmVycm9yKCAnTWV0aG9kICcgKyAgbWV0aG9kICsgJyBkb2VzIG5vdCBleGlzdCcgKTtcbiAgICB9ICAgXG59O1xuXG59KSggalF1ZXJ5ICk7XG4gICAgXG4gICAgICAgICIsIlxuXG4oZnVuY3Rpb24oICQgKSB7XG5cdC8vaW5pdCBzbGlkZXJzXG5cdCQoJy5zbGlkZXInKS5sb29rU2xpZGVyKCk7XG5cbn0pKCBqUXVlcnkgKTsiXX0=
