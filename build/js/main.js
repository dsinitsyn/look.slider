!function(e){var t={col:1,dotted:!1,swipe:!0,arrows:!0,duration:500,carousel:!0,autoslide:2e3,animation:"ribbon"},i={init:function(i,n){var s=this;s.$slider=e(i),s.settings=e.extend({},t,s.$slider.data(),n),s.$wrapper=s.createWrapper(),s.$slides=s.assignSlides(),s.$slides.length>1&&s.setup(),s.setActiveSlide(s.$slides.first())},setup:function(){var e=this;e.assignSlidesOrder(),1==e.settings.arrows&&e.initArrows(),1==e.settings.dotted&&e.initDots(),1==e.settings.swipe&&e.initSwipe(),"number"==typeof e.settings.autoslide&&e.initAutoslide(),0==e.settings.carousel&&e.$slider.on("activeSlideChanged",function(){e.toggleArrowState()})},initSwipe:function(){var t=this;t.$slider.swipe=function(t,i){function n(){1==event.touches.length&&(a=event.touches[0].pageX,l=!0,r.on("touchmove",d))}function s(){r.off("touchmove"),l=!1,a=null}function d(){if(l){var e=event.touches[0].pageX,n=a-e;Math.abs(n)>=30&&(n>0&&"left"==t?i():n<0&&"right"==t&&i(),s())}event.preventDefault()}var a,r=e(this),l=!1;r.on("touchstart",n)},t.$slider.swipe("right",function(){t.bindDirectionClick("prev")}),t.$slider.swipe("left",function(){t.bindDirectionClick("next")})},initArrows:function(){var t=this;t.$nextBtn=e("<button/>",{addClass:"slider_next-btn",type:"button"}).click(function(){t.bindDirectionClick("next")}),t.$prevBtn=e("<button/>",{addClass:"slider_prev-btn",type:"button"}).click(function(){t.bindDirectionClick("prev")}),t.$slider.append(t.$nextBtn,t.$prevBtn)},initDots:function(){var t=this;t.$dotsList=e("<div/>",{addClass:"slider_dots"}).appendTo(t.$slider),t.$slides.each(function(i){e("<button/>",{addClass:"slider_dot-btn",type:"button"}).data("slideIndex",i).appendTo(t.$dotsList)}),t.$dots=t.$slider.find(".slider_dot-btn"),t.$slider.on("activeSlideChanged",function(){t.$dots.removeClass("-active").filter(function(){return t.$activeSlide.index()==e(this).data("slideIndex")}).addClass("-active")}),t.$dots.click(function(i){t.bindDotClick(e(this))})},initAutoslide:function(){var e=this,t=setInterval(function(){var t=e.$activeSlide.data("nextIndex");e.goToSlide(t,"next")},e.settings.autoslide);e.$prevBtn.add(e.$nextBtn).add(e.$dots).one("click.clearInterval",function(){clearInterval(t)}),e.$slider.one("touchstart.clearInterval",function(){clearInterval(t)})},bindDotClick:function(e){var t=this,i=e.data("slideIndex");i>t.$activeSlide.index()?t.goToSlide(i,"next"):i<t.$activeSlide.index()&&t.goToSlide(i,"prev")},bindDirectionClick:function(e){var t=this,i=t.$activeSlide.data(e+"Index");t.goToSlide(i,e)},goToSlide:function(e,t){var i=this;if(!i.isAnimate&&e<=i.$slides.length){if(i.isAnimate=!0,i.$nextSlide=i.$slides.eq(e),"next"==t)var n="-100%",s="100%";else if("prev"==t)var n="100%",s="-100%";switch(i.settings.animation){case"ribbon":i.$activeSlide.css({zIndex:1}).animate({left:n},i.settings.duration),i.$nextSlide.css({left:s,zIndex:2}).animate({left:0},i.settings.duration,function(){i.$activeSlide.finish(),i.setActiveSlide(i.$nextSlide),i.isAnimate=!1});break;case"fade":i.$activeSlide.css({zIndex:1}),i.$nextSlide.css({opacity:0,zIndex:2}).animate({opacity:1},i.settings.diration,function(){i.setActiveSlide(i.$nextSlide),i.isAnimate=!1})}}},setActiveSlide:function(t){var i=this,n=e(t);i.$slides.removeClass("-active").removeAttr("style"),i.$activeSlide=n.addClass("-active"),i.$slider.trigger("activeSlideChanged",[i.$activeSlide])},toggleArrowState:function(){var e=this;return"undefined"==typeof e.$nextSlide?(e.$prevBtn.prop("disabled",!0),!1):(e.$nextSlide.is(e.$slides.last())?e.$nextBtn.prop("disabled",!0):e.$nextBtn.prop("disabled",!1),void(e.$nextSlide.is(e.$slides.first())?e.$prevBtn.prop("disabled",!0):e.$prevBtn.prop("disabled",!1)))},assignSlides:function(){var e=this;if(1!=e.settings.col)for(var t=e.$wrapper.children("*"),i=0;i<t.length;i+=e.settings.col)t.slice(i,i+e.settings.col).wrapAll("<div class='slide'></div>");return e.$wrapper.children(".slide")},assignSlidesOrder:function(){var t=this;t.$slides.each(function(i,n){var s=e(n);i==t.$slides.length-1?s.data("nextIndex",0):s.data("nextIndex",i+1),0==i?s.data("prevIndex",t.$slides.length-1):s.data("prevIndex",i-1)})},createWrapper:function(e){var t=this;return t.$slider.wrapInner('<div class="slider_wrapper"></div>'),t.$slider.find(".slider_wrapper")},reinit:function(t){e(this)}};e.fn.lookSlider=function(t){return i[t]?i[t].apply(this.data("lookSlider"),Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist"):this.each(function(){var n=Object.create(i);n.init(this,t),e.data(this,"lookSlider",n)})}}(jQuery),function(e){e(".slider").lookSlider()}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
